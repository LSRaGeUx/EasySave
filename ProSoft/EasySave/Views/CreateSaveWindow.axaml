<UserControl x:Class="EasySave.Views.CreateSaveView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:EasySave.ViewModels"
             x:DataType="vm:CreateSaveViewModel">
             <!-- x:CompileBindingExtension="True" -->
    <Grid>
        <Image Source="/Assets/background.jpg" Stretch="UniformToFill">
            <Image.Effect>
                <BlurEffect Radius="45" />
            </Image.Effect>
            <Image.OpacityMask>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#32000000" Offset="0.0" />
                    <GradientStop Color="#32000000" Offset="1.0" />
                </LinearGradientBrush>
            </Image.OpacityMask>
        </Image>
        <Grid>
        <!-- Define two columns for the layout with relative widths -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.23*"/>
            <ColumnDefinition Width="0.77*"/>
        </Grid.ColumnDefinitions>

        <!-- Left column content with a fixed height -->
        <DockPanel LastChildFill="True">
            <!-- Bouton "Ajouter une Sauvegarde" -->
            <Button Command="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).CreateSaveChoiceCommand}" DockPanel.Dock="Top" Background="#dcdcdb" Height="100" Width="220" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" Padding="0">
                <Button.Template>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="Ajouter une Sauvegarde" Foreground="#313131" Margin="0,0,0,10" FontSize="12" FontFamily="Segoe UI"/>
                                <Image Source="/Assets/task_add_hov.png" Width="17" Height="17"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>


            <!-- Zone Sauvegarde Existante -->
            <ScrollViewer Margin="0,0,0,0" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible">
                <!-- CrÃ©ation du Template -->
                <ItemsControl ItemsSource="{Binding Saves}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!-- Template -->
                            <Button Command="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).CreateSaveExistCommand}" CommandParameter="{Binding Name}" Grid.Column="0" Height="100" Width="220" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" Padding="0" >
                                <Button.Styles>
                                    <Style Selector="Button /template/ ContentPresenter:pointerover">
                                        <Setter Property="Background" Value="#444953"/>
                                    </Style>
                                </Button.Styles>
                                <Border Background="#444953" CornerRadius="5">
                                    <Grid>
                                        <!-- Subdivide the left column into two parts: text and buttons -->
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- StackPanel for text content aligned to the left -->
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <!-- TextBlock aligned to the left without extra margin -->
                                            <TextBox x:Name="NameTextBox" Text="{Binding Name}" Margin="15,10,0,0" FontSize="12" FontFamily="Segoe UI" FontWeight="Bold"/>
                                        </StackPanel>
                                        
                                        <!-- Button Edit Save -->
                                        <Button Grid.Column="1" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10">
                                            <Button.Command>
                                                    <Binding Path="$parent[Window].((vm:MainWindowViewModel)DataContext).ChangeNameCommand" />
                                                </Button.Command>
                                                <Button.CommandParameter>
                                                    <MultiBinding StringFormat="{}{0},{1}">
                                                        <Binding Path="Text" ElementName="NameTextBox" />
                                                        <Binding Path="Name" />
                                                    </MultiBinding>
                                                </Button.CommandParameter>
                                            <Image Source="/Assets/edit_item.png" Width="17" Height="17"/>
                                        </Button>

                                        <!-- Image PC -->
                                        <Image Grid.Column="1" Source="/Assets/dst_local.png" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="50" Height="50" Margin="10"/>
                                    </Grid>
                                </Border>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </DockPanel>

        <ContentControl Grid.Column="1" HorizontalAlignment="Stretch" Content="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).InsideViewModel}"/>
    </Grid>
    </Grid>

</UserControl>